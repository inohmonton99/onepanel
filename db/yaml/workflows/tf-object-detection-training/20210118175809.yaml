metadata:
  name: "TF Object Detection Training"
  kind: Workflow
  version: 20210118175809
  action: update
  source: "https://github.com/onepanelio/templates/blob/master/workflows/tf-object-detection-training/"
  labels:
    "created-by": "system"
    "used-by": "cvat"
spec:
  arguments:
    parameters:
      - name: cvat-annotation-path
        value: 'artifacts/{{workflow.namespace}}/annotations/'
        hint: Path to annotated data (COCO format) in default object storage. In CVAT, this parameter will be pre-populated.
        displayName: Dataset path
        visibility: internal

      - name: val-split
        value: 10
        displayName: Validation split size
        type: input.number
        visibility: public
        hint: Enter validation set size in percentage of full dataset. (0 - 100)

      - name: num-augmentation-cycles
        value: 1
        displayName: Number of augmentation cycles
        type: input.number
        visibility: public
        hint: Number of augmentation cycles, zero means no data augmentation

      - name: preprocessing-parameters
        value: |-
          RandomBrightnessContrast:
              p: 0.2
          GaussianBlur:
              p: 0.3
          GaussNoise:
              p: 0.4
          HorizontalFlip:
              p: 0.5
          VerticalFlip:
              p: 0.3
        displayName: Preprocessing parameters
        visibility: public
        type: textarea.textarea
        hint: 'See <a href="https://albumentations.ai/docs/api_reference/augmentations/transforms/" target="_blank">documentation</a> for more information on parameters.'

      - name: cvat-model
        value: frcnn-res50-coco
        displayName: Model
        hint: TF Detection API's model to use for training.
        type: select.select
        visibility: public
        options:
          - name: 'Faster RCNN-ResNet 101-COCO'
            value: frcnn-res101-coco
          - name: 'Faster RCNN-ResNet 101-Low Proposal-COCO'
            value: frcnn-res101-low
          - name: 'Faster RCNN-ResNet 50-COCO'
            value: frcnn-res50-coco
          - name: 'Faster RCNN-NAS-COCO'
            value: frcnn-nas-coco
          - name: 'SSD MobileNet V1-COCO'
            value: ssd-mobilenet-v1-coco2
          - name: 'SSD MobileNet V2-COCO'
            value: ssd-mobilenet-v2-coco
          - name: 'SSDLite MobileNet-COCO'
            value: ssdlite-mobilenet-coco

      - name: cvat-num-classes
        value: '10'
        hint: Number of classes. In CVAT, this parameter will be pre-populated.
        displayName: Number of classes
        visibility: internal

      - name: hyperparameters
        value: |-
          num_steps: 10000
        displayName: Hyperparameters
        visibility: public
        type: textarea.textarea
        hint: 'See <a href="https://docs.onepanel.ai/docs/reference/workflows/training#tfod-hyperparameters" target="_blank">documentation</a> for more information on parameters.'

      - name: dump-format
        value: cvat_coco
        displayName: CVAT dump format
        visibility: private

      - name: cvat-finetune-checkpoint
        value: ''
        hint: Path to the last fine-tune checkpoint for this model in default object storage. Leave empty if this is the first time you're training this model.
        displayName: Checkpoint path
        visibility: public

      - name: tf-image
        value: tensorflow/tensorflow:1.13.1-py3
        type: select.select
        displayName: Select TensorFlow image
        visibility: public
        hint: Select the GPU image if you are running on a GPU node pool
        options:
          - name: 'TensorFlow 1.13.1 CPU Image'
            value: 'tensorflow/tensorflow:1.13.1-py3'
          - name: 'TensorFlow 1.13.1 GPU Image'
            value: 'tensorflow/tensorflow:1.13.1-gpu-py3'

      - displayName: Node pool
        hint: Name of node pool or group to run this workflow task
        type: select.nodepool
        name: sys-node-pool
        value: "{{.DefaultNodePoolOption}}"
        visibility: public
        required: true

  entrypoint: main
  templates:
    - dag:
        tasks:
          - name: preprocessing
            template: preprocessing
          - name: train-model
            template: tensorflow
            dependencies: [preprocessing]
            arguments:
              artifacts:
                - name: data
                  from: "{{tasks.preprocessing.outputs.artifacts.processed-data}}"
      name: main
    - container:
        args:
          - |
            apt-get update && \
            apt-get install -y python3-pip git wget unzip libglib2.0-0 libsm6 libxext6 libxrender-dev && \
            pip install --upgrade pip && \
            pip install pillow lxml Cython contextlib2 matplotlib numpy scipy pycocotools pyyaml test-generator && \
            cd /mnt/src/tf/research && \
            export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim && \
            mkdir -p /mnt/src/protoc && \
            wget -P /mnt/src/protoc https://github.com/protocolbuffers/protobuf/releases/download/v3.10.1/protoc-3.10.1-linux-x86_64.zip && \
            cd /mnt/src/protoc/ && \
            unzip protoc-3.10.1-linux-x86_64.zip && \
            cd /mnt/src/tf/research/ && \
            /mnt/src/protoc/bin/protoc object_detection/protos/*.proto --python_out=. && \
            cd /mnt/src/train/workflows/tf-object-detection-training && \
            python main.py \
              --extras="{{workflow.parameters.hyperparameters}}" \
              --model="{{workflow.parameters.cvat-model}}" \
              --num_classes="{{workflow.parameters.cvat-num-classes}}" \
              --sys_finetune_checkpoint="{{workflow.parameters.cvat-finetune-checkpoint}}" \
              --from_preprocessing=True
        command:
          - sh
          - -c
        image: '{{workflow.parameters.tf-image}}'
        volumeMounts:
          - mountPath: /mnt/data
            name: processed-data
          - mountPath: /mnt/output
            name: output
        workingDir: /mnt/src
      nodeSelector:
        "{{.NodePoolLabel}}": '{{workflow.parameters.sys-node-pool}}'
      inputs:
        artifacts:
          - name: data
            path: /mnt/data/datasets/
          - name: models
            path: /mnt/data/models/
            optional: true
            s3:
              key: '{{workflow.parameters.cvat-finetune-checkpoint}}'
          - git:
              repo: https://github.com/tensorflow/models.git
              revision: v1.13.0
            name: src
            path: /mnt/src/tf
          - git:
              repo: https://github.com/onepanelio/templates.git
              revision: v0.18.0
            name: tsrc
            path: /mnt/src/train
      name: tensorflow
      outputs:
        artifacts:
          - name: model
            optional: true
            path: /mnt/output
      sidecars:
        - name: tensorboard
          image: '{{workflow.parameters.tf-image}}'
          command:
            - sh
            - '-c'
          env:
            - name: ONEPANEL_INTERACTIVE_SIDECAR
              value: 'true'
          args:
            # Read logs from /mnt/output - this directory is auto-mounted from volumeMounts
            - tensorboard --logdir /mnt/output/checkpoints/
          ports:
            - containerPort: 6006
              name: tensorboard
    - container:
        args:
          - |
            pip install --upgrade pip &&\
            pip install opencv-python albumentations tqdm pyyaml pycocotools && \
            cd /mnt/src/preprocessing/workflows/albumentations-preprocessing && \
            python -u main.py \
              --data_aug_params="{{workflow.parameters.preprocessing-parameters}}" \
              --format="tfrecord" \
              --val_split={{workflow.parameters.val-split}} \
              --aug_steps={{workflow.parameters.num-augmentation-cycles}}
        command:
          - sh
          - -c
        image: '{{workflow.parameters.tf-image}}'
        volumeMounts:
          - mountPath: /mnt/data
            name: data
          - mountPath: /mnt/output
            name: processed-data
        workingDir: /mnt/src
      nodeSelector:
        "{{.NodePoolLabel}}": '{{workflow.parameters.sys-node-pool}}'
      inputs:
        artifacts:
          - name: data
            path: /mnt/data/datasets/
            s3:
              key: '{{workflow.parameters.cvat-annotation-path}}'
          - git:
              repo: https://github.com/onepanelio/templates.git
              revision: v0.18.0
            name: src
            path: /mnt/src/preprocessing
      name: preprocessing
      outputs:
        artifacts:
          - name: processed-data
            optional: true
            path: /mnt/output
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
    - metadata:
        name: processed-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
    - metadata:
        name: output
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 200Gi
